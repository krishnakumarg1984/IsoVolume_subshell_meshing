{
  "name": "Isovolume subshell meshing",
  "tagline": "Code that helps to divide a sphere of radius R, into sub-shells of equal volumes, for a given thickness of outermost sub-shell. ",
  "body": "### Background.\r\nThe mesh used in a FD/FE discretisation for solid diffusion simulation is often constructed such that the inter-nodal distance ensure that the sub-shells all have equal volumes. This is non-trivial to derive by hand for anything more than 2 or 3 layers. This code performs this automation for you and the complexities are described with a generous dose of inline comments.\r\n\r\n### Motivation and typical application\r\nElectrochemical reactions usually occur at the surface of the particle, usually modelled as a sphere of fixed radius. For improving simulation accuracy, we need more mesh-points closer to the surface of the sphere. As matter moves towards the sphere's centre, we only need to use lesser and lesser points progressively. In 1D domain, with the left representing the centre, and the right representing the surface, we need a non-uniformly spaced mesh, such that the corresponding spheres represented by the inter-nodal distance have equal volume. \r\n\r\n### Usage\r\nThis is a MATLAB script. The code uses only the base MATLAB functions and hence should be compatible with GNU Octave (free!), for those without an active MATLAB license.\r\nAs an end-user, you input the sphere radius, the max allowed shells and the desired inter-nodal distance at the surface, (i.e. the smallest mesh-size) and the code generates all the mesh co-ordinates. It also gives you the inter-nodal distances (just in case you wish to use them in your further calculations).\r\n\r\n### Authors and Attribution\r\nYou can contact the author, Krishnakumar Gopalakrishnan here in Github @krishnakumarg1984. You may also send an email to krishnakumar@imperial.ac.uk . The co-author, Teng Zhang can be contacted by emailing him at t.zhang@imperial.ac.uk . Attribution is not mandatory, but appreciated. However, if you are redistributing the code/modifying it in any way, please follow the instructions in license.txt file in the code repository. The code is distributed under a permissive BSD license.  However, the authors retain the copyright. \r\n\r\n### Alternative Sources\r\nThis code may also be downloaded from MATLAB's file exchange [submission] here(http://www.mathworks.com/matlabcentral/fileexchange/57794-isovolume-subshells). The MATLAB submission is synced overnight with the latest updates from the github project here.\r\n\r\n### Research Group\r\nThis code snippet is a small utility published out of the Li-ion modelling research at the Electrochemical Science and Engineering Group,Imperial College London. (http://www.imperial.ac.uk/electrochem-sci-eng)",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}